#!/usr/bin/ruby
require 'yaml'
require 'digest/md5'

class Conf
  CONFIG = YAML::load open(File.expand_path 'config.yml', File.dirname(__FILE__)).read

  def self.method_missing(name, *args)
    CONFIG[name.to_s]
  end
end

def system_run(cmd)
  puts cmd
  system cmd
end

def upload(fname)
  return unless File.exists? fname

  ext = fname.split(/\//).last =~ /^(.*)(\.\w+)$/ ? $2 : ''
  hash = Digest::MD5.hexdigest open(fname).read

  system_run "ssh #{Conf.ssh} mkdir -p  #{Conf.dir}"
  system_run "scp '#{fname}' #{Conf.ssh}:#{Conf.dir}#{hash}#{ext}"
  system_run "ssh #{Conf.ssh} chmod 644 #{Conf.dir}#{hash}#{ext}"

  furl = "#{Conf.url}#{hash}#{ext}"
  puts " => #{furl}"
  system_run "echo '#{furl}' | pbcopy"
  system_run "open '#{furl}'"
end

def capture
  fname = "/tmp/face-upload-#{Time.now.to_i}_#{Time.now.usec}.png"
  system_run "screencapture -i #{fname}"
  return unless File.exists? fname
  system_run "sips -d profile --deleteColorManagementProperties '#{fname}'"
  return fname
end

if ARGV.empty?
  fname = capture
  if fname
    upload fname
    File.delete fname
  end
else
  ARGV.each do |fname|
    upload fname
  end
end
